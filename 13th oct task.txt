
Task=1

Diference Between HTTP 1.1 HTTP 2.0

          HTTP 1.1                                                       HTTP 2.0

<i> Man readable data format                              <i> It is not man readable format
that is what is in header file and body its
read through human

<ii>It is work on the textual format                       <ii> It is work on binary format

<iii> It compresses data by itself                         <iii> It uses HPACK for data compression

<iv> It uses requests resource Inlining                     <iv> It uses PUSH frame by server that 
     for use getting multiple pages                               collects all multiple pages 

<v>There is head of line blocking that blocks all the        <v>  It allows multiplexing so one TCP connection   
requests behind it until it doesn’t get its all resources.         is required for multiple requests.   

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Task = 2

Objects And Its Internal Representation In JavaScript


Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript.
These objects are quite different from JavaScript’s primitive data-types(Number, String, Boolean, null, 
undefined and symbol) in the sense that while these primitive data-types all store a single value each 
(depending on their types).

Objects are more complex and each object may contain any combination of these primitive data-types as well as
reference data-types.
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a 
pointer to that value. That reference or pointer points to the location in memory where the object is stored. 
The variables don’t actually store the value.

Loosely speaking, objects in JavaScript may be defined as an unordered collection of related data, of 
primitive or reference types, in the form of “key: value” pairs. These keys can be variables or functions 
and are called properties and methods, respectively, in the context of an object.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

Task 3

Codekatta practised done



